{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start}');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet userSeletedDate;\n\nfunction addZero(value) {\n  return;\n  String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysElement.textContent = addZero(days);\n  hoursElement.textContent = addZero(hours);\n  minutesElement.textContent = addZero(minutes);\n  secondsElement.textContent = addZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onclose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      userSeletedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n});\n\nlet timerInterval;\n\nstartButton.addEventListener('click', () => {\n  const now = new Date();\n  const timeDifference = userSeletedDate - now;\n\n  if (timeDifference > 0) {\n    datetimePicker.disabled = true;\n\n    startButton.disabled = true;\n\n    timerInterval = setInterval(() => {\n      const now = new Date();\n      const timeDifference = userSeletedDate - now;\n\n      if (timeDifference <= 0) {\n        clearInterval(timerInterval);\n        datetimePicker.disabled = false;\n\n        updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        return;\n      }\n      const timeRemaining = convertMs(timeDifference);\n      updateTimer(timeRemaining);\n    }, 1000);\n  }\n});\n"],"names":["datetimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSeletedDate","updateTimer","days","hours","minutes","seconds","convertMs","ms","selectedDates","selectedDate","timerInterval","timeDifference","timeRemaining"],"mappings":"oDAAA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAOJ,SAASC,EAAY,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDT,EAAY,YAAc,OAC1BC,EAAa,YAAc,OAC3BC,EAAe,YAAc,OAC7BC,EAAe,YAAc,MAC/B,CAEA,SAASO,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,UAAUX,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQc,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDd,EAAY,SAAW,KAEvBK,EAAkBS,EAClBd,EAAY,SAAW,GAE1B,CACH,CAAC,EAED,IAAIe,EAEJf,EAAY,iBAAiB,QAAS,IAAM,CAEnBK,EADX,IAAI,KAGK,IACnBN,EAAe,SAAW,GAE1BC,EAAY,SAAW,GAEvBe,EAAgB,YAAY,IAAM,CAEhC,MAAMC,EAAiBX,EADX,IAAI,KAGhB,GAAIW,GAAkB,EAAG,CACvB,cAAcD,CAAa,EAC3BhB,EAAe,SAAW,GAE1BO,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzD,MACD,CACD,MAAMW,EAAgBN,EAAUK,CAAc,EAC9CV,EAAYW,CAAa,CAC1B,EAAE,GAAI,EAEX,CAAC"}